[build]
  command = "npm run build:netlify"
  publish = "dist"
  base = "/"

[build.environment]
  NODE_VERSION = "20.18.0"
  NPM_FLAGS = "--no-optional --no-fund --no-audit"
  CI = "true"

[functions]
  directory = "functions"
  node_bundler = "esbuild"

[functions."flowise-simple"]
  timeout = 60
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js"]

# Search function configurations
[functions."search-orchestrator"]
  timeout = 60
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "node-fetch", "jsonwebtoken"]

[functions."search-brave"]
  timeout = 30
  node_bundler = "esbuild"
  external_node_modules = ["node-fetch", "jsonwebtoken"]

[functions."search-exa"]
  timeout = 30
  node_bundler = "esbuild"
  external_node_modules = ["node-fetch", "jsonwebtoken"]

[functions."search-perplexity"]
  timeout = 45
  node_bundler = "esbuild"
  external_node_modules = ["node-fetch", "jsonwebtoken"]

[functions."search-clinicaltrials"]
  timeout = 30
  node_bundler = "esbuild"
  external_node_modules = ["node-fetch"]

[functions."system-health"]
  timeout = 30
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "node-fetch"]

[functions."monitoring-dashboard"]
  timeout = 60
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "jsonwebtoken"]

[functions."news-collection"]
  timeout = 300
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "node-fetch", "jsonwebtoken"]
  schedule = "0 6,18 * * *"
  
  [functions."news-collection".environment]
    FORCE_COLLECTION = "true"

[functions."medical-news"]
  timeout = 60
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "node-fetch", "jsonwebtoken"]

[functions."news-interaction"]
  timeout = 30
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "node-fetch", "jsonwebtoken"]

[functions."news-recommendations"]
  timeout = 60
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "node-fetch", "jsonwebtoken"]

[functions."news-analytics"]
  timeout = 120
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "node-fetch", "jsonwebtoken"]

[functions."liked-results"]
  timeout = 60
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "node-fetch", "jsonwebtoken"]

[functions."news-content-processor"]
  timeout = 180
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "node-fetch", "jsonwebtoken"]

# ABG Analysis functions with extended timeouts for Flowise
[functions."abg-action-plan-processor"]
  timeout = 120
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "node-fetch", "jsonwebtoken"]

[functions."abg-issues-extractor"]
  timeout = 60
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "openai", "jsonwebtoken"]

# Edge Functions with JSR imports moved to edge-functions-temp/ 
# These functions are designed for Supabase Edge Functions (Deno runtime)
# and cannot be bundled locally with esbuild/Node.js

# Podcast functions migrated to Supabase Edge Functions
# - generate-podcast: Supabase Edge Function
# - podcast-queue-processor: Supabase Edge Function
# - podcast-status: Supabase Edge Function
# - podcast-preview: Supabase Edge Function


[functions."abg-interpretation"]
  timeout = 60
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "openai", "jsonwebtoken"]

# Personal KB functions migrated to Supabase Edge Functions:
# - openai-assistant → supabase/functions/openai-assistant  
# - uploadDocumentToOpenAI → supabase/functions/upload-document-to-openai
# - uploadDocumentToOpenAI-v2 → supabase/functions/upload-document-to-openai
# - manageVectorStore → supabase/functions/manageVectorStore
# - deleteDocumentFromOpenAI → supabase/functions/delete-document-from-openai

[functions."simple-test"]
  timeout = 30
  node_bundler = "esbuild"

[dev]
  framework = "vite"
  targetPort = 5173
  port = 8888
  functionsTimeout = 120
  functionsBodySizeLimit = "100mb"

# Security: Force HTTPS redirect
[[redirects]]
  from = "http://medimindexpert.netlify.app/*"
  to = "https://medimindexpert.netlify.app/:splat"
  status = 301
  force = true

# Podcast functionality migrated to Supabase Edge Functions

# Search API routes (must be first for proper routing)
[[redirects]]
  from = "/api/search/orchestrator"
  to = "/.netlify/functions/search-orchestrator"
  status = 200
  force = true

[[redirects]]
  from = "/api/search/brave"
  to = "/.netlify/functions/search-brave"
  status = 200
  force = true

[[redirects]]
  from = "/api/search/exa"
  to = "/.netlify/functions/search-exa"
  status = 200
  force = true

[[redirects]]
  from = "/api/search/perplexity"
  to = "/.netlify/functions/search-perplexity"
  status = 200
  force = true

# Specific API routes first (order matters)
[[redirects]]
  from = "/api/flowise/chat"
  to = "/.netlify/functions/flowise-simple"
  status = 200
  force = true

[[redirects]]
  from = "/api/flowise/auth"
  to = "/.netlify/functions/flowise-simple"
  status = 200
  force = true

[[redirects]]
  from = "/api/test-auth"
  to = "/.netlify/functions/test-auth"
  status = 200
  force = true

# Handle OPTIONS requests for CORS preflight (must be after specific routes)
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/cors-handler"
  status = 200
  force = true
  conditions = {Methods = ["OPTIONS"]}


# Personal KB API redirects removed - functions migrated to Supabase Edge Functions
# - /api/openai-assistant → now handled by frontend routing to Supabase Edge Functions

[[redirects]]
  from = "/api/test-openai-auth"
  to = "/.netlify/functions/test-openai-auth"
  status = 200
  force = true

[[redirects]]
  from = "/api/exa/search"
  to = "/.netlify/functions/exa-search"
  status = 200
  force = true

[[redirects]]
  from = "/api/perplexity/chat/completions"
  to = "/.netlify/functions/perplexity-chat"
  status = 200
  force = true

# System monitoring and health check endpoints
[[redirects]]
  from = "/api/system/health"
  to = "/.netlify/functions/system-health"
  status = 200
  force = true

[[redirects]]
  from = "/api/monitoring/dashboard"
  to = "/.netlify/functions/monitoring-dashboard"
  status = 200
  force = true

# Medical News API endpoints
[[redirects]]
  from = "/api/news/collect"
  to = "/.netlify/functions/news-collection"
  status = 200
  force = true

[[redirects]]
  from = "/api/medical-news"
  to = "/.netlify/functions/medical-news"
  status = 200
  force = true

[[redirects]]
  from = "/api/medical-news/trending"
  to = "/.netlify/functions/medical-news"
  status = 200
  force = true

[[redirects]]
  from = "/api/medical-news/categories"
  to = "/.netlify/functions/medical-news"
  status = 200
  force = true

[[redirects]]
  from = "/api/news/interaction"
  to = "/.netlify/functions/news-interaction"
  status = 200
  force = true

[[redirects]]
  from = "/api/liked-results"
  to = "/.netlify/functions/liked-results"
  status = 200
  force = true


# SPA fallback for non-API routes only
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  force = false

# Security Headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=(), payment=()"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    Cross-Origin-Embedder-Policy = "credentialless"
    Cross-Origin-Opener-Policy = "same-origin"

# Health check endpoint
[[redirects]]
  from = "/api/health"
  to = "/.netlify/functions/api-health"
  status = 200
  force = true

# Test flowise auth endpoint
[[redirects]]
  from = "/api/test-flowise-auth"
  to = "/.netlify/functions/test-flowise-auth"
  status = 200
  force = true

# Basic test endpoint (no dependencies)
[[redirects]]
  from = "/api/test-basic"
  to = "/.netlify/functions/test-basic"
  status = 200
  force = true

# Simple test endpoint  
[[redirects]]
  from = "/api/simple-test"
  to = "/.netlify/functions/simple-test"
  status = 200
  force = true

# API Security Headers
[[headers]]
  for = "/api/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"

[build.processing]
  skip_processing = false
[build.processing.css]
  bundle = true
  minify = true
[build.processing.js]
  bundle = true
  minify = true
[build.processing.html]
  pretty_urls = true
[build.processing.images]
  compress = true# Updated: Thu Jul  3 00:37:46 +04 2025
